# DASHBOARD AND DATA ANALYSIS FOR IOT APPLICATION

                          NAME: SHAIK JAVEDBASHA
                          EMAIL ID: javedbasha472@gmail.com
 

# Table of Contents
1. Abstract
2. Introduction
2.1 About NODE-RED
2.2 Why it is called NODE-RED
3. Open Weather API
3.1 Weather data in fast and easy-to-use way
3.2 Open Weather products
3.3 One call API by call
4. Methodology
4.1 Home Automation System Dashboard
4.2 OpenWeather API
4.3 Analysis of Earthquake Dataset
5. JSON File
6. Conclusion



                                # ABSTRACT

In this era of digitization and automation, the life of human beings is getting simpler as 
almost everything is automatic, replacing the old manual systems. Nowadays humans have 
made internet an integral part of their everyday life without which they are helpless. Internet of things 
(IoT) provides a platform that allows devices to connect, sense and control remotely across a network 
infrastructure. In this paper we focus on home automation using IOT. The IOT devices controls and 
monitors the electronic, electrical and the mechanical systems used in various types of buildings. The 
devices connected to the cloud server are controlled by a single admin which facilitate a number of 
users to which a number of sensor and control nodes are connected. The admin can access and control 
all the nodes connected to each user but a single user can control only the nodes to which the user 
itself is connected. This whole system using Internet of Things (iot) will allow mobile devices and 
computers to remotely control all the functions and features of home appliances from anywhere 
around the world using the internet connection. The system designed is economical and can be 
expanded as it allows connection and controlling of a number of different devices. Advancement 
in technology has not only transformed our life but also extended in every sphere of our way of living. 
Most of the electronic devices are manually monitored on regular basis to ensure the optimal 
operation. To install new application specific devices not only increases the cost but also replaces the 
old device. Here we propose a system, which can monitor and schedule any old electronic device 
through a mobile application and its operation can be optimized by saving time and energy.
 
 
                                # INTRODUCTION
                                
Homes of the 21st century will become more and more selfcontrolled and automated due to the 
comfort it provides, especially when employed in a private home. A home automation system is a 
means that allow users to control electric appliances of varying kind. Many existing, well-established 
home automation systems are based on wired communication. This does not pose a problem until the 
system is planned well in advance and installed during the physical construction of the building. But 
for already existing buildings the implementation cost goes very high. In contrast, Wireless systems 
can be of great help for automation systems. With the advancement of wireless technologies such as 
Wi-Fi, cloud networks in the recent past, wireless systems are used every day and everywhere.
This paper proposes a Home Automation system that employs the integration of multi-touch mobile 
devices, cloud networking, wireless communication, and power-line communication to provide the 
user with remote control of various lights and appliances within their home. This system uses a 
consolidation of a mobile phone application, handheld wireless remote and PC based program to
provide a means of user interface to the consumer.
Home automation systems face four main challenges, these are high cost of ownership, inflexibility, 
poor manageability, and difficulty in achieving security. The main objectives of this research is to 
design and implement a home automation system using IoT that is capable of controlling and 
automating most of the house appliances through an easy manageable web interface. The proposed 
system has a great flexibility by using Wi-Fi technology to interconnect its distributed sensors to 
home automation server. This will decrease the deployment cost and will increase the ability of 
upgrading, and system reconfiguration


Home automation system is growing rapidly, they are used to provide comfort, convenience, quality 
of life and security for residents. Nowadays, most home automation systems are used to provide ease 
to elderly and disabled people and they reduce the human labor in the production of services and 
goods [1]–[2]. Home automation system can be designed and developed by using a single controller 
which has the ability to control and monitor different interconnected appliances such as power plugs, 
lights, temperature and humidity sensors, smoke, gas and fire detectors as well as emergency and 
security systems [3]. One of the greatest advantage of home automation system is that it can be 
controlled and managed easily from an array of devices such as smartphone, tablet, desktop and 
laptop [4]. The rapid growth of wireless technologies influences us to use smartphones to remotely 
control and monitor the home appliances around the world [5]–[6]. Several home automation systems 
use smartphones to communicate with microcontrollers using various wireless communication 
techniques such as Bluetooth [7], GSM [8], ZigBee [9], Wi-Fi [10] and EnOcean [11]. Smartphone 
applications are used to connect to the network so that the authorized users can adjust the setting of 
system on their personal devices. Different type of home automation systems offer a wide range of 
functions and services, some of the common features are appliance control, thermostat control, remote 
control lighting, live video surveillance, monitor security camera, real time text alerts [10]–[13].
About Node-RED:
 
 
Node-RED started life in early 2013 as a side-project by Nick O’Leary and Dave Conway-Jones of 
IBM’s Emerging Technology Services group.
What began as a proof-of-concept for visualising and manipulating mappings between MQTT topics, 
quickly became a much more general tool that could be easily extended in any direction.
It was open-sourced in September 2013 and has been developed in the open ever since, culminating in 
it being one of the founding projects of the JS Foundation in October 2016.
In 2019, the Node.js Foundation merged with the JS Foundation to form the OpenJS Foundation.
Why is it called Node-RED? The name was a light-hearted play on words sounding like 'Code Red'. 
It stuck and was a great improvement on whatever it was called in the first few days. The 'Node' part 
reflects both the flow/node programming model as well as the underlying Node.JS runtime. We never 
did come to a conclusion on what the 'RED' part stands for. "Rapid Event Developer" was one 
suggestion, but we've never felt compelled to formalise anything. We stick with 'Node-RED'.

                                # OPEN WEATHER API
                                
Weather data in a fast and easy-to-use way
We are providing highly recognisable weather products that make working with the weather data a 
way easier. We work with millions of developers around a clock and believe that these benefits might 
be suitable for most of applications, up to the complex enterprise systems.
• A spectrum of ready-to-use weather products
• Short-term and long-term forecasts, history and observation
• Any location on the globe
• Transparent pricing and licensing

Our weather products are accessible via fast, reliable APIs that follow industry standards and 
compatible with different kind of enterprise systems. All our products content essential climate 
variables for any location. Besides that, we have some special products that helpful for industries that 
are affected by weather condition, for instance Road Risk API, Solar Radiation API, etc.
Open Weather products
For each point on the globe, Open Weather provides hyperlocal minute forecast, historical data, 
current state, and from short-term to annual and forecasted weather data. All data is available 
via industry standard APIs.
One Call API by call:
This product allows users to receive all essential weather data for a specific location by making only 
one API call. One Call 3.0 includes the following data:

• Current weather
• Minute forecast for 1 hour
• Hourly forecast for 48 hours
• Daily forecast for 8 days
• National weather alerts
• Historical weather data for 40+ years back
This product allows users to receive all essential weather data for a specific location by making only 
one API call. One Call 3.0 includes the following data:
                                      
                                      # METHODOLOGY
# HOME AUTOMATION SYSTEM DASHBOARD:

Steps to do Home Automation Dashboard using Node-RED
Step1: Download and Install NODE-RED using above procedure and type node red in command 
prompt.
Step2: In command prompt it will give a URL to you and copy it.
Step3: Paste the URL in Browser and click enter.
Step4: Finally! NODE-RED will be open in your browser and make connections you want.
In this methodology we will discuss how to connect nodes in node red and how to make home 
automation systems dashboard in it.
I calculated Home Outside Temperature and it is shown in the below figure.

Fig: Home Outside Temperature
In the Home Automation, I chosen four rooms for a home and each room consists of different 
electrical appliances and it performs different actions in different times, in this project I did same as 
like this in home automation. Below process shows how I connect the nodes to get home dashboard 
and etc.
Those four rooms are said to be, 
 1. Entrance
 2. Hall
 3. Kitchen
 4. Bedroom
In NODE-RED, Firstly we will take the Inject node from the group of nodes. For Each getting 
purpose I used buttons in format to getting rooms on dashboard. For four rooms I took four buttons 
each and connected to inject node, this inject node termed after in compiler page as “time stamp” 
connect this one to four buttons in it.
Take a debug node and place it, and connect to time stamp.
Finally! Before going debug process, I changed dashboard name to another one, because to get 
different types of layouts in dashboard. Each layout means each dashboard is a separate room to 
watch it.
By this time, I took some switches according to room possibilities,
Like, I attached switch nodes to rooms, for four rooms some switches are there.
For Entrance Room, there is three switches for Bulb 1, Bulb 2 and Fan.
Fig: ENTRANCE ROOM & SWITCHES OF DEVICES

For Living Hall Room, there is five switches according to people comforts, those are Bulb 1, Fan, 
Bulb 2, AC, Television.
Fig: Hall & Switches of Devices
For Kitchen, there is three switches for Bulb 1, Bulb 2 and Refridgerator.
Fig: Kitchen & Switches of Devices

Finally! For Bedroom, there is five switches according to people comforts, those are Bulb 1, Fan, 
Bulb 2, AC, Television.
 Fig: Bedroom & Switches of Devices
This are appliances I connected in the node red to get the output like as above in the dashboard to 
operate.
This is the first methodology I did for Home Automation System, Images for this one will be 
available in the page.

# OPENWEATHER API:
Here, I used to calculate the weather condition in our surroundings or any other cities far from us.
Steps to follow to get weather conditions by using OpenWeather API
Step 1: Search open weather API in your browser.
Step 2: Go to that website, Create an account in it and verify your mail id.
Step 3: Go to “My API keys” and save your API key.
In Open weather API, Firstly, Go and click API on menu bar present in it. Click on the Current 
weather data and search a link consists of {City name} and {API key}.
Take it and save it, search a city in open weather website and copy the city name and paste it in the 
link, where the city name consists before pasting, remove city name in that link.

Finally! Paste your API key in API key name in that link. Copy that link and paste in your web 
browser and click enter.
Your get the output as JSON format. If we already added the extension file of JSON in your chrome 
browser.

In NODE-RED, let’s take the, I took some nodes from node red,
i.e., inject node, http request node, function node, chart node, debug node.
In Inject “time stamp” node have to put interval of time to update temperature and wind speed at a 
time. Connect line wise in node red, in “http request node” we have to paste the link we created earlier 
to get weather data and change the mode to JSON project, do this all after double click the node and 
click on done button.
In function node, we have to write on line of code, i.e.,
{msg.payload = msg.payload.clouds.all;}
Click on done button.
Connect the function node to debug and chart. Debug the flow and see your node-red dashboard.


# ANALYSIS OF EARTHQUAKE DATASET

This analysis done through a CSV file given to us. In this, CSV file there is multiple number columns 
are there.
In that, one column is RMS value, i.e., ROOT MEAN SQAURE Value, we have to analysis it.
Link: http://earthquake.usgs.gov/earthquakes/feed/v1.0/summary/2.5_day.csv
For this CSV link we have to analyse.
• The root mean square (RMS) travel time residual, in sec, using all weight.
• This parameter provides a measure of the fit of the observed arrival times to the predicted 
arrival time for this location.
• Smaller numbers reflect the better fit of the data
• Display “better fit” when the RMS value is less than 1 in the dashboard.
Let’s coming into the NODE-RED, I took some nodes from node red,
i.e., inject node, http request node, CSV node, Switch node, Change node, debug node, text node.
These are the nodes are used to analyse the earthquake dataset.
Firstly! Connect all the nodes in above manner.
In Inject “time stamp” node have to put interval of time for which time interval you want.
In Http request node we have to put the above CSV link I provided in this and click on done button.
I took CSV node, because to extract the csv data this node will use , in this node, we have to click the 
upper option and remove the lower option itself it provided in it.
In switch node (not dashboard node), we have to put condition in, means we are providing and 
analysing RMS in dataset.
So, we want rms value below 1, we put less than symbol “<” in it after we have to put number 1 in it 
and click on done.
Change node will termed after in flow page as “set.payload”, in this node we have to type “BETTER 
FIT” in empty space in it and click on done.
This change node will connect to debug node and text node at a time.
Finally! Debug the flows and see the output in node red dashboard.
HOW WE SEE NODE RED DASHBOARD?
The link provided by command prompt to you paste it in web browser and type “ui” after that URL 
link and press enter. { https://123.45.1008/ui }
Then you can see your Dashboard.

Fig: Various nodes are connected to analyse RMS value and if RMS value is lessthan 1 it showing 
“BETTER FIT” in debug console.

Fig: This one showing the both speed and RMS data analysis
Fig: All rooms with respective temperatures in home

Fig: Respective average temperatures Graph of home


# JSON FILE

// 20220905133046
// 
https://api.openweathermap.org/data/2.5/weather?q=Bengaluru,%20IN&appid=7b7c12a10146e5bd76
449a2ee37bc335
{
 "coord": {
 "lon": 77.6033,
 "lat": 12.9762
 },
 "weather": [
 {
 16
 "id": 802,
 "main": "Clouds",
 "description": "scattered clouds",
 "icon": "03d"
 }
 ],
 "base": "stations",
 "main": {
 "temp": 302.14,
 "feels_like": 304.64,
 "temp_min": 301.05,
 "temp_max": 302.32,
 "pressure": 1012,
 "humidity": 63
 },
 "visibility": 10000,
 "wind": {
 "speed": 2.57,
 "deg": 50
 },
 "clouds": {
 "all": 40
 },
 "dt": 1662278159,
 "sys": {
 "type": 2,
 17
 "id": 2017753,
 "country": "IN",
 "sunrise": 1662251927,
 "sunset": 1662296349
 },
 "timezone": 19800,
 "id": 1277333,
 "name": "Chennai",
 "cod": 200
}

                                       # CONCLUSION
                                       
The home automation using Internet of Things has been experimentally proven to work satisfactorily 
by connecting simple appliances to it and the appliances were successfully controlled remotely 
through internet. The designed system not only monitors the sensor data, like temperature, gas, light, 
motion sensors, but also process according to the requirement, for example switching on the light 
when it gets dark. It also stores the sensor parameters in the cloud (Gmail)in a timely manner. This 
will help the user to analyse the condition of various parameters in the home anytime anywhere.
